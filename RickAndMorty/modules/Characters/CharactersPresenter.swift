//
//  CharactersPresenter.swift
//  RickAndMorty
//
//  Created by Patrick VONGPRASEUTH on 05/04/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import Foundation
import RxSwift
import RxCocoa

final class CharactersPresenter {

    // MARK: - Private properties -
    var characters = BehaviorRelay<[Character]>(value: [Character]())
    private var disposeBag = DisposeBag()

    private unowned let view: CharactersViewInterface
    private let interactor: CharactersInteractorInterface
    private let wireframe: CharactersWireframeInterface

    // MARK: - Lifecycle -

    init(view: CharactersViewInterface, interactor: CharactersInteractorInterface, wireframe: CharactersWireframeInterface) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
    }
}

// MARK: - Extensions -

extension CharactersPresenter: CharactersPresenterInterface {
     
    func getCharacters(){
        interactor.fetchCharacters().drive(onNext: { (characters) in
            self.characters.accept(characters)
        }).disposed(by: disposeBag)
    }
    
    func goToDetail(index: Int) {
        wireframe.pushToCharacterDetail(character: characters.value[index])
    }
}
