//
//  EpisodeDetailViewController.swift
//  RickAndMorty
//
//  Created by Patrick VONGPRASEUTH on 03/04/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit
import RxSwift

final class EpisodeDetailViewController: UIViewController {
    
    @IBOutlet private weak var name: UILabel!
    @IBOutlet private weak var date: UILabel!
    @IBOutlet private weak var number: UILabel!
    @IBOutlet private weak var tableView: UITableView!
    private let disposeBag = DisposeBag()
    
    // MARK: - Public properties -

    var presenter: EpisodeDetailPresenterInterface!

    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        
        title = "Episode's Detail"
         
        presenter.episode.asObservable().bind {
            self.name.text = $0.name
            self.date.text = $0.airDate
            self.number.text = $0.episode
        }.disposed(by: disposeBag)
        
        presenter.fillCharacters()
        
        presenter.characters.bind(to: tableView.rx.items(cellIdentifier: "characterCell")) {
            row, item, cell in
            cell.textLabel?.text = item.name
        }
        .disposed(by: disposeBag)
        
        tableView
            .rx
            .modelSelected(Character.self)
            .subscribe { (_) in
                let index = self.tableView.indexPathForSelectedRow?.row ?? 0
                self.displayCharacterDetail(index: index)
            }
            .disposed(by: disposeBag)
    }

}

// MARK: - Extensions -

extension EpisodeDetailViewController: EpisodeDetailViewInterface {
    func displayCharacterDetail(index : Int){
        presenter.goToCharacterDetail(index: index)
    }
}
